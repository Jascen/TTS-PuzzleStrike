-- This file exists to house all pass-through functions

require("windows/character-list/_character-list")

windows = {}
function windows.initialize()
    characterList.buildMap()
end

-- TODO: Switch to "windows." and move these things into respective files
show = {
    CharacterList = {
        Purple = {
            currentId = 1
        },
        Red = {
            currentId = 1
        },
        Green = {
            currentId = 1
        },
        Blue = {
            currentId = 1
        }
    },

    Scoreboard = {
        Purple = {
            visible = true
        },
        Red = {
            visible = true
        },
        Green = {
            visible = true
        },
        Blue = {
            visible = true
        }
    }
}

function startGame()
    setup.startGame()
end

function selectMode(player, option, id)
    if option == "Random" then
        mode = constants.modes.random
    elseif option == "Manual" then
        mode = constants.modes.manual
    elseif option == "Draft" then
        mode = constants.modes.draft
    elseif option == "First Game" then
        mode = constants.modes.beginner
    end
end

function minimizeScoreboard(player)
    windowUtil.showForPlayer(player, "Scoreboard_content", show["Scoreboard"])
end

function toggleRotateBank(_, value)
    if value == "True" then
      game_settings.rotateBank = true
      bank.rotateBankForColor(Turns.turn_color)
    else
      game_settings.rotateBank = false
    end
end

function togglePlaceholder(_, value)
    if value == "True" then
      game_settings.showLabels = true
    else
      game_settings.showLabels = false
    end

    for i, id in ipairs(constants.labels) do
        local label = getObjectFromGUID(id)
        if game_settings.showLabels == true then
            label.TextTool.setValue(tostring(i))
        else
            label.TextTool.setValue(" ")
        end
    end
end

function toggleHostOptions()
    local opened = UI.getAttribute("HostOptions_content", "active")
    if opened == "False" then
      UI.setAttribute("HostOptions", "height", 75)
      UI.setAttribute("HostOptions_content", "active", true)
    else
      UI.setAttribute("HostOptions", "height", 25)
      UI.setAttribute("HostOptions_content", "active", false)
    end
end
  
function closeSettings()
    UI.setAttribute("Settings", "active", false)
end
  
function toggleSettings()
    local opened = UI.getAttribute("Settings", "active")
    if opened == "True" then
        UI.setAttribute("Settings", "active", false)
    else
        UI.setAttribute("Settings", "active", true)
    end
end
  
function toggleEnableTools(_, value)
    if value == "True" then
      game_settings.enableTools = true
      UI.setAttribute("Tools", "active", true)
    else
      game_settings.enableTools = false
      UI.setAttribute("Tools", "active", false)
    end
end


function nextChar(player)
    characterList.nextChar(player)
end

function prevChar(player)
    characterList.prevChar(player)
end

function optionSelected(player, name)
    characterList.optionSelected(player, name)
end

function inspectCharacter(player, character, name)
    characterList.inspectCharacter(player, character, name)
end

function selectChar(player)
    characterList.selectChar(player)
end

function randomizeCharacter(player)
    characterList.randomizeCharacter(player)
end

function selectCharacter(player)
    characterList.selectCharacter(player)
end

function closeCharacterSelection(player)
    characterList.closeWindow(player)
end
